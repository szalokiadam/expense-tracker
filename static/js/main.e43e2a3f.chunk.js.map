{"version":3,"sources":["resources/scss/Balance.module.scss","resources/scss/NewTransaction.module.scss","components/Balance.js","components/Watcher.js","Utilities.js","actions/index.js","components/TransactionsList.js","components/Transactions.js","components/NewTransaction.js","components/Home.js","components/Error404.js","components/LoginError.js","components/TransactionsByDate.js","components/Login.js","components/permissions.js","components/Menu.js","components/HeaderFooter.js","App.js","components/LoadingScreen.js","reducers/reducer-transactions.js","reducers/reducer-loggedin.js","reducers/reducer-user.js","store/index.js","index.js"],"names":["module","exports","connect","state","transactions","total","reduce","transaction","amount","className","style","total__amount","income","expense","forEach","tr","getIncomeExpense","uniqueNumber","date","Date","getFullYear","toTwoDigit","getMonth","getDate","getHours","getMinutes","getSeconds","digit","dateString","_date","format","year","month","day","replace","NEW_TRANSACTION","SET_TRANSACTIONS","DELETE_TRANSACTION","DELETE_TRANSACTIONS","SET_LOGGED_IN","USER_NAME","dispatch","deleteTransaction","type","payload","editable","filteredTransactions","maxElements","newTransactions","slice","endElement","React","createRef","useEffect","current","scrollIntoView","map","created","title","onClick","id","ref","maxTransactions","deleteAll","useReducer","setEditable","length","onCreatePressed","onLoadPage","useState","setTitle","setAmount","open","isOpen","toggleOpener","addNewItem","shouldCloseOnOverlayClick","shouldCloseOnEsc","onRequestClose","ariaHideApp","overlay","backgroundColor","content","position","left","top","transform","background","borderRadius","border","outline","padding","width","maxWidth","boxSizing","onSubmit","event","preventDefault","_amount","parseInt","data","getTime","autoFocus","placeholder","name","value","onChange","e","target","Home","Error404","LoginError","DateRange","parentCallback","today","startDate","setStartDate","endDate","setEndDate","maxEnd","start","setHours","end","number","setDate","datePlusDay","filter","max","min","setFilteredTransactions","ttransactionsr","loggedIn","user","setLogin","login","setLoggedIn","setUserName","username","setUsername","password","setPassword","valid","setValid","submitLogin","isValid","checkPermission","setMenuToggle","submitLogout","to","process","Header","Footer","exact","from","path","LoadingScreen","action","concat","RootReducer","combineReducers","persistConfig","key","storage","stateReconciler","autoMergeLevel2","persistedReducer","persistReducer","configureStore","createStore","require","config","store","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.e43e2a3f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"total\":\"Balance_total__2uVBj\",\"total__amount\":\"Balance_total__amount__3G5j7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addNewItem\":\"NewTransaction_addNewItem__OT3ii\"};","import style from \"../resources/scss/Balance.module.scss\";\r\n\r\n// REDUX\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Balance({ transactions }) {\r\n  const total = transactions.reduce(\r\n    (total, transaction) => total + transaction.amount,\r\n    0\r\n  );\r\n\r\n  return (\r\n    <section className={style.total}>\r\n      <p className=\"section-title\">Total balance:</p>\r\n      <p className={style.total__amount}>{total}</p>\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    transactions: state.transactions,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Balance);\r\n","import React from \"react\";\r\nimport \"../resources/scss/Watcher.scss\";\r\n\r\n// REDUX\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Watcher({ transactions }) {\r\n  function getIncomeExpense() {\r\n    let income = 0;\r\n    let expense = 0;\r\n    transactions.forEach((tr) => {\r\n      if (tr.amount > 0) {\r\n        income += tr.amount;\r\n      } else {\r\n        expense -= tr.amount;\r\n      }\r\n    });\r\n    return [income, expense];\r\n  }\r\n\r\n  const [income, expense] = getIncomeExpense();\r\n\r\n  return (\r\n    <section className=\"watcher\">\r\n      <div className=\"watcher__container\">\r\n        <div>\r\n          <span>Income</span>\r\n          <span className=\"amount income\">{income}</span>\r\n        </div>\r\n        <div>\r\n          <span>Expense</span>\r\n          <span className=\"amount expense\">{expense}</span>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    transactions: state.transactions,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Watcher);\r\n","export function uniqueNumber() {\r\n  const date = new Date();\r\n  const str = `${date.getFullYear()}${toTwoDigit(\r\n    date.getMonth() + 1\r\n  )}${toTwoDigit(date.getDate())}_${toTwoDigit(date.getHours())}${toTwoDigit(\r\n    date.getMinutes()\r\n  )}${toTwoDigit(date.getSeconds())}`;\r\n  return str;\r\n}\r\nexport function toTwoDigit(digit) {\r\n  if (digit < 10) return `0${digit}`;\r\n  return `${digit}`;\r\n}\r\nexport function dateString(_date, format) {\r\n  const date = new Date(_date);\r\n  const [year, month, day] = [\r\n    toTwoDigit(date.getFullYear()),\r\n    toTwoDigit(date.getMonth() + 1),\r\n    toTwoDigit(date.getDate()),\r\n  ];\r\n  if (format)\r\n    return format\r\n      .replace(/y/i, `${year}`)\r\n      .replace(/m/i, `${month}`)\r\n      .replace(/d/i, `${day}`);\r\n  return `${year}-${month}-${day}`;\r\n}\r\n","//TRANSACTIONS\r\nexport const NEW_TRANSACTION = \"NEW_TRANSACTION\";\r\nexport const GET_TRANSACTIONS = \"GET_TRANSACTIONS\";\r\nexport const SET_TRANSACTIONS = \"SET_TRANSACTIONS\";\r\nexport const DELETE_TRANSACTION = \"DELETE_TRANSACTION\";\r\nexport const DELETE_TRANSACTIONS = \"DELETE_TRANSACTIONS\";\r\n\r\nexport const newTransaction = (transaction) => ({\r\n  type: NEW_TRANSACTION,\r\n  payload: transaction,\r\n});\r\n\r\nexport const getTransactions = (transactions) => ({\r\n  type: GET_TRANSACTIONS,\r\n  payload: transactions,\r\n});\r\n\r\nexport const setTransactions = (transaction) => ({\r\n  type: SET_TRANSACTIONS,\r\n  payload: transaction,\r\n});\r\n\r\nexport const deleteTransaction = (transaction) => ({\r\n  type: DELETE_TRANSACTION,\r\n  payload: transaction,\r\n});\r\n\r\nexport const deleteTransactions = (transactions) => ({\r\n  type: DELETE_TRANSACTIONS,\r\n  payload: transactions,\r\n});\r\n\r\n//LOGIN\r\nexport const SET_LOGGED_IN = \"SET_LOGGED_IN\";\r\n\r\nexport const setLoggedIn = (login) => ({\r\n  type: SET_LOGGED_IN,\r\n  payload: login,\r\n});\r\n\r\n//USER NAME\r\nexport const USER_NAME = \"USER_NAME\";\r\n\r\nexport const setUserName = (user) => ({\r\n  type: USER_NAME,\r\n  payload: user,\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport { dateString } from \"../Utilities\";\r\nimport \"../resources/scss/TransactionsList.scss\";\r\nimport { BiTrashAlt } from \"react-icons/bi\";\r\n\r\n// REDUX\r\nimport { connect } from \"react-redux\";\r\nimport { deleteTransaction } from \"../actions\";\r\n\r\nfunction TransactionsList({\r\n  editable = false,\r\n  filteredTransactions = null,\r\n  maxElements = null,\r\n  transactions,\r\n  deleteTransaction,\r\n}) {\r\n  let newTransactions = filteredTransactions || transactions;\r\n\r\n  newTransactions = maxElements\r\n    ? newTransactions.slice(-maxElements)\r\n    : newTransactions;\r\n  const endElement = React.createRef();\r\n\r\n  useEffect(() => {\r\n    endElement.current.scrollIntoView();\r\n  }, [endElement]);\r\n\r\n  function deleteItem(currentTransaction) {\r\n    deleteTransaction(currentTransaction);\r\n  }\r\n\r\n  return (\r\n    <ul className=\"transactions__list\">\r\n      {newTransactions.map((transaction) => {\r\n        const date = dateString(transaction.created);\r\n        return (\r\n          <li\r\n            key={transaction.id}\r\n            className={transaction.amount < 0 ? \"negative\" : \"positive\"}\r\n          >\r\n            <span className={\"trans_date\"}>{date}</span>\r\n            <span className={\"trans_title\"}>{transaction.title}</span>\r\n            <span className={\"trans_amount\"}>{transaction.amount}</span>\r\n            {editable && (\r\n              <>\r\n                <button\r\n                  className={\"trans_delete\"}\r\n                  onClick={() => deleteItem(transaction)}\r\n                >\r\n                  Delete <BiTrashAlt />\r\n                </button>\r\n              </>\r\n            )}\r\n          </li>\r\n        );\r\n      })}\r\n      <li className=\"dummy\" ref={endElement}></li>\r\n    </ul>\r\n  );\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    transactions: state.transactions,\r\n  };\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteTransaction: (tr) => dispatch(deleteTransaction(tr)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionsList);\r\n","import React, { useReducer } from \"react\";\r\nimport { BiEdit, BiSave, BiTrash } from \"react-icons/bi\";\r\nimport \"../resources/scss/Transactions.scss\";\r\nimport TransactionsList from \"./TransactionsList\";\r\n// REDUX\r\nimport { connect } from \"react-redux\";\r\nimport { deleteTransactions } from \"../actions\";\r\n\r\nfunction Transactions({ transactions, deleteAll }) {\r\n  const [editable, setEditable] = useReducer((editable) => !editable);\r\n  const maxTransactions = 8;\r\n  function clearAll() {\r\n    deleteAll();\r\n  }\r\n\r\n  return (\r\n    <section className=\"transactions\">\r\n      <div className=\"transactions__header\">\r\n        <p className=\"section-title\">\r\n          Transactions (last {maxTransactions} elements)\r\n        </p>\r\n        <div className=\"trans_buttons\">\r\n          {transactions.length > 0 &&\r\n            (editable && transactions.length > 0 ? (\r\n              <>\r\n                <button\r\n                  title=\"Clear All\"\r\n                  className=\"trans_save\"\r\n                  onClick={clearAll}\r\n                >\r\n                  Clear All <BiTrash />\r\n                </button>\r\n                <button\r\n                  title=\"Save\"\r\n                  className=\"trans_save\"\r\n                  onClick={setEditable}\r\n                >\r\n                  Save <BiSave />\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <button\r\n                  title=\"Edit\"\r\n                  className=\"trans_edit\"\r\n                  onClick={setEditable}\r\n                >\r\n                  Edit\r\n                  <BiEdit />\r\n                </button>\r\n              </>\r\n            ))}\r\n        </div>\r\n      </div>\r\n      <TransactionsList editable={editable} maxElements={maxTransactions} />\r\n    </section>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    transactions: state.transactions,\r\n    maxTransactions: state.maxTransactions,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteAll: (tr) => dispatch(deleteTransactions(tr)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Transactions);\r\n","import { useState, useReducer } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { uniqueNumber } from \"../Utilities\";\r\nimport style from \"../resources/scss/NewTransaction.module.scss\";\r\nimport { newTransaction, getTransactions } from \"../actions\";\r\n// REDUX\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction NewTransaction({\r\n  transactions,\r\n  maxTransactions,\r\n  onCreatePressed,\r\n  onLoadPage,\r\n  dispatch,\r\n}) {\r\n  let [title, setTitle] = useState(\"\");\r\n  let [amount, setAmount] = useState(\"\");\r\n\r\n  const [isOpen, toggleOpener] = useReducer((open) => !open, false);\r\n\r\n  function addToTransactions(event) {\r\n    event.preventDefault();\r\n    if (!title || !amount) return;\r\n    const _amount = parseInt(amount, 10);\r\n    const data = {\r\n      id: uniqueNumber(),\r\n      title,\r\n      amount: _amount,\r\n      created: new Date().getTime(),\r\n    };\r\n\r\n    setTitle(\"\");\r\n    setAmount(\"\");\r\n    onCreatePressed(data);\r\n    toggleOpener();\r\n  }\r\n\r\n  return (\r\n    <section className={style.addNewItem}>\r\n      <button className=\"primary\" type=\"submit\" onClick={toggleOpener}>\r\n        Add new item\r\n      </button>\r\n      <Modal\r\n        isOpen={isOpen}\r\n        shouldCloseOnOverlayClick={true}\r\n        shouldCloseOnEsc={true}\r\n        onRequestClose={toggleOpener}\r\n        className={style.addNewItem}\r\n        ariaHideApp={false}\r\n        style={{\r\n          overlay: {\r\n            backgroundColor: \"rgba(238, 238, 238, 0.7)\",\r\n          },\r\n          content: {\r\n            position: \"absolute\",\r\n            left: \"50%\",\r\n            top: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            background: \"#282828\",\r\n            borderRadius: \"5px\",\r\n            border: \"1px solid #424242\",\r\n            outline: \"none\",\r\n            padding: \"20px\",\r\n            width: \"calc(100% - 30px)\",\r\n            maxWidth: \"400px\",\r\n            boxSizing: \"border-box\",\r\n          },\r\n        }}\r\n      >\r\n        <p className=\"section-title\">Add new item</p>\r\n        <form onSubmit={addToTransactions}>\r\n          <label>\r\n            <span>Title:</span>\r\n            <input\r\n              autoFocus={true}\r\n              placeholder=\"Item name\"\r\n              name=\"title\"\r\n              type=\"text\"\r\n              value={title}\r\n              onChange={(e) => {\r\n                setTitle(e.target.value);\r\n              }}\r\n            />\r\n          </label>\r\n          <label>\r\n            <span>Amount:</span>\r\n            <input\r\n              placeholder=\"Item cost\"\r\n              name=\"amount\"\r\n              type=\"number\"\r\n              value={amount}\r\n              onChange={(e) => {\r\n                setAmount(e.target.value);\r\n              }}\r\n            />\r\n          </label>\r\n          <button className=\"primary\" type=\"submit\">\r\n            Add to list\r\n          </button>\r\n        </form>\r\n      </Modal>\r\n    </section>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    transactions: state.transactions,\r\n    maxTransactions: state.maxTransactions,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onCreatePressed: (tr) => dispatch(newTransaction(tr)),\r\n    onLoadPage: (tr) => dispatch(getTransactions(tr)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewTransaction);\r\n","import React from \"react\";\r\nimport Balance from \"./Balance\";\r\nimport Watcher from \"./Watcher\";\r\nimport Transactions from \"./Transactions\";\r\nimport NewTransaction from \"./NewTransaction\";\r\nimport \"../resources/scss/Home.scss\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div className=\"expense-tracker\">\r\n      <Balance />\r\n      <Watcher />\r\n      <Transactions />\r\n      <NewTransaction />\r\n    </div>\r\n  );\r\n}\r\n","import \"../resources/scss/Error404.scss\";\r\n\r\nexport default function Error404() {\r\n  return (\r\n    <div className=\"error-404\">\r\n      <div className=\"background\"></div>\r\n      <div className=\"error-text\">\r\n        <h2>Error 404</h2>\r\n        <p>The page does not exist!</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"../resources/scss/LoginError.scss\";\r\n\r\nexport default function LoginError() {\r\n  return (\r\n    <div className=\"loginError\">\r\n      <h2>\r\n        Welcome to\r\n        <br /> Expense Tracker\r\n      </h2>\r\n      <p>\r\n        This app is for those who like to keep track of what they spent their\r\n        money on\r\n      </p>\r\n      <p>Please Login to use</p>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { dateString } from \"../Utilities\";\r\nimport \"../resources/scss/TransactionsByDate.scss\";\r\nimport TransactionsList from \"./TransactionsList\";\r\n\r\n// REDUX\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction TransactionsByDate({ transactions }) {\r\n  const [filteredTransactions, setFilteredTransactions] = useState([]);\r\n\r\n  function handleCallback(ttransactionsr) {\r\n    setFilteredTransactions([...transactions]);\r\n  }\r\n  return (\r\n    <div className=\"expense-tracker\">\r\n      <DateRange transactions={transactions} parentCallback={handleCallback} />\r\n      <section className=\"transactions\">\r\n        <TransactionsList filteredTransactions={filteredTransactions} />\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\nfunction DateRange({ transactions, parentCallback }) {\r\n  const today = new Date();\r\n  const [startDate, setStartDate] = useState(dateString(today));\r\n  const [endDate, setEndDate] = useState(dateString(today));\r\n  const maxEnd = dateString(today);\r\n\r\n  function datePlusDay(_date, number = 0) {\r\n    const date = new Date(_date);\r\n    date.setDate(date.getDate() + number);\r\n    return date.getTime();\r\n  }\r\n\r\n  function selectDateRange(event) {\r\n    event.preventDefault();\r\n    const start = new Date(startDate).setHours(0, 0, 0, 0);\r\n    const end = new Date(datePlusDay(endDate, 1)).setHours(0, 0, 0, 0);\r\n\r\n    const newTransactions = transactions.filter((tr) => {\r\n      return start <= tr.created && tr.created <= end;\r\n    });\r\n    parentCallback(newTransactions);\r\n  }\r\n\r\n  return (\r\n    <section className=\"dateRange\">\r\n      <p>Select Date Range</p>\r\n      <form onSubmit={selectDateRange}>\r\n        <label>\r\n          <span>Star Date:</span>\r\n          <input\r\n            type=\"date\"\r\n            value={startDate}\r\n            onChange={(e) => setStartDate(e.target.value)}\r\n            max={endDate}\r\n          />\r\n        </label>\r\n        <label>\r\n          <span>End Date:</span>\r\n          <input\r\n            type=\"date\"\r\n            value={endDate}\r\n            onChange={(e) => setEndDate(e.target.value)}\r\n            min={startDate}\r\n            max={maxEnd}\r\n          />\r\n        </label>\r\n        <button className=\"primary\" type=\"submit\">\r\n          Select Date\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    transactions: state.transactions,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(TransactionsByDate);\r\n","import { useState } from \"react\";\r\nimport { checkPermission } from \"./permissions\";\r\nimport \"../resources/scss/Login.scss\";\r\nimport { BiLogOut, BiMoney, BiTimeFive } from \"react-icons/bi\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { setLoggedIn, setUserName } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Login({ parentCallback, loggedIn, setLogin, user, setUserName }) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [valid, setValid] = useState(true);\r\n\r\n  function submitLogin(event) {\r\n    event.preventDefault();\r\n    const isValid = checkPermission({ username, password });\r\n    if (isValid) {\r\n      setValid(true);\r\n      setLogin(true);\r\n      setMenuToggle();\r\n      setUserName(username);\r\n    } else {\r\n      setValid(false);\r\n    }\r\n  }\r\n\r\n  function setMenuToggle() {\r\n    parentCallback();\r\n  }\r\n  const submitLogout = () => {\r\n    setMenuToggle();\r\n    setLogin(false);\r\n  };\r\n  function loginPage() {\r\n    return (\r\n      <div className=\"loginInner loginBox\">\r\n        <h2>Login</h2>\r\n        <span className=\"error\">{!valid && \"Username/password invalid\"}</span>\r\n        <form onSubmit={submitLogin}>\r\n          <label>\r\n            <span>User name:</span>\r\n            <input\r\n              name=\"username\"\r\n              type=\"text\"\r\n              value={username}\r\n              onChange={(e) => {\r\n                setUsername(e.target.value);\r\n                setValid(true);\r\n              }}\r\n              autoFocus={true}\r\n            />\r\n          </label>\r\n          <label>\r\n            <span>Password:</span>\r\n            <input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => {\r\n                setPassword(e.target.value);\r\n                setValid(true);\r\n              }}\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className=\"primary\">\r\n            Login\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function profilePage() {\r\n    return (\r\n      <div className=\"loginInner\">\r\n        <h2>Profile</h2>\r\n        <p>User: {user}</p>\r\n        <div className=\"buttons\">\r\n          <Link to=\"/\" onClick={setMenuToggle}>\r\n            <button type=\"button\" className=\"neutral\">\r\n              <span className=\"button-icon\">\r\n                <BiMoney />\r\n              </span>\r\n              Latest Transactions\r\n            </button>\r\n          </Link>\r\n          <Link to=\"/monthly-transactions\" onClick={setMenuToggle}>\r\n            <button type=\"button\" className=\"neutral\">\r\n              <span className=\"button-icon\">\r\n                <BiTimeFive />\r\n              </span>\r\n              Transactions by Date\r\n            </button>\r\n          </Link>\r\n          <button type=\"button\" onClick={submitLogout} className=\"neutral\">\r\n            <span className=\"button-icon\">\r\n              <BiLogOut style={{ transform: \"rotate(180deg)\" }} />\r\n            </span>\r\n            Logout\r\n          </button>\r\n        </div>\r\n        <span className=\"version\">\r\n          version: {process.env.REACT_APP_VERSION}\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n  return loggedIn ? profilePage() : loginPage();\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loggedIn: state.loggedIn,\r\n    user: state.user,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setLogin: (login) => dispatch(setLoggedIn(login)),\r\n    setUserName: (user) => dispatch(setUserName(user)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","export function checkPermission({ username, password }) {\r\n  return username;\r\n}\r\n","import { useReducer } from \"react\";\r\nimport { BiUser as ProfileIcon } from \"react-icons/bi\";\r\nimport { connect } from \"react-redux\";\r\nimport Login from \"./Login\";\r\n\r\nfunction Menu({ loggedIn }) {\r\n  const [open, toggleOpener] = useReducer((open) => !open, false);\r\n\r\n  function handleCallback() {\r\n    toggleOpener();\r\n  }\r\n  return (\r\n    <div className=\"login-container\">\r\n      {loggedIn ? (\r\n        \"\"\r\n      ) : (\r\n        <button className=\"register-button neutral\">Register</button>\r\n      )}\r\n      <button className=\"login-button primary\" onClick={toggleOpener}>\r\n        <span className=\"button-icon\">\r\n          <ProfileIcon />\r\n        </span>\r\n        {loggedIn ? \"Profile\" : \"Login\"}\r\n      </button>\r\n      {open && <Login parentCallback={handleCallback} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    loggedIn: state.loggedIn,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Menu);\r\n","import { Link } from \"react-router-dom\";\r\nimport \"../resources/scss/HeaderFooter.scss\";\r\n\r\nimport Menu from \"./Menu\";\r\n\r\nexport function Header() {\r\n  return (\r\n    <header>\r\n      <h1 className=\"title\">\r\n        <Link to=\"/\">Expense Tracker</Link>\r\n      </h1>\r\n      <Menu />\r\n    </header>\r\n  );\r\n}\r\nexport function Footer() {\r\n  return <footer></footer>;\r\n}\r\n","import \"./resources/scss/App.scss\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Home from \"./components/Home\";\r\nimport Error404 from \"./components/Error404\";\r\nimport LoginError from \"./components/LoginError\";\r\nimport TransactionsByDate from \"./components/TransactionsByDate\";\r\nimport { Header, Footer } from \"./components/HeaderFooter\";\r\n\r\n// REDUX\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction App({ loggedIn }) {\r\n  return (\r\n    <>\r\n      <div className=\"Background\"></div>\r\n      <div className=\"App\">\r\n        <Header />\r\n        <main>\r\n          {!loggedIn && <Redirect to=\"/home\" />}\r\n          <Switch>\r\n            <Redirect exact from=\"/\" to=\"/home\" />\r\n            <Route path=\"/home\">{loggedIn ? <Home /> : <LoginError />}</Route>\r\n            <Route path=\"/monthly-transactions\">\r\n              <TransactionsByDate />\r\n            </Route>\r\n            <Route path=\"*\">\r\n              <Error404 />\r\n            </Route>\r\n          </Switch>\r\n        </main>\r\n        <Footer />\r\n        {/* </LoggedIn.Provider> */}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    loggedIn: state.loggedIn,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import \"../resources/scss/LoadingScreen.scss\";\r\nimport { BiDollarCircle } from \"react-icons/bi\";\r\n\r\nexport default function LoadingScreen() {\r\n  return (\r\n    <div className=\"loadingScreen\">\r\n      <span className=\"icon\">\r\n        <BiDollarCircle />\r\n      </span>\r\n      {/* <h2>Loading</h2> */}\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  NEW_TRANSACTION,\r\n  SET_TRANSACTIONS,\r\n  DELETE_TRANSACTION,\r\n  DELETE_TRANSACTIONS,\r\n} from \"../actions\";\r\n\r\nconst transactions = (state = [], action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case NEW_TRANSACTION: {\r\n      const transaction = payload;\r\n      return state.concat(transaction);\r\n    }\r\n    case SET_TRANSACTIONS: {\r\n      const transaction = payload;\r\n      debugger;\r\n      return transaction;\r\n    }\r\n    case DELETE_TRANSACTION: {\r\n      const transaction = payload;\r\n      return state.filter((tr) => tr.id !== transaction.id);\r\n    }\r\n    case DELETE_TRANSACTIONS: {\r\n      return [];\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default transactions;\r\n","import { SET_LOGGED_IN } from \"../actions\";\r\n\r\nconst loggedIn = (state = false, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_LOGGED_IN: {\r\n      const loggedIn = payload;\r\n      return loggedIn;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default loggedIn;\r\n","import { USER_NAME } from \"../actions\";\r\n\r\nconst user = (state = null, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_NAME: {\r\n      const user = payload;\r\n      return user;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default user;\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\r\n\r\nimport { transactions, loggedIn, user } from \"../reducers\";\r\n\r\nconst RootReducer = combineReducers({\r\n  transactions,\r\n  loggedIn,\r\n  user,\r\n});\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  stateReconciler: autoMergeLevel2,\r\n};\r\nconst persistedReducer = persistReducer(persistConfig, RootReducer);\r\n\r\nconst configureStore = createStore(persistedReducer);\r\n\r\nexport default configureStore;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport LoadingScreen from \"./components/LoadingScreen\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport configureStore from \"./store\";\r\n// REDUX\r\nimport { Provider } from \"react-redux\";\r\nimport { persistStore } from \"redux-persist\";\r\nimport { PersistGate } from \"redux-persist/lib/integration/react\";\r\n\r\nrequire(\"dotenv\").config();\r\n\r\nconst store = configureStore;\r\nconst persistor = persistStore(store);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate persistor={persistor} loading={<LoadingScreen />}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}