{"version":3,"sources":["resources/scss/Balance.module.scss","resources/scss/NewTransaction.module.scss","components/Store.js","components/_globalContext.js","components/Balance.js","components/Watcher.js","Utilities.js","components/TransactionsList.js","components/Transactions.js","components/NewTransaction.js","components/Home.js","components/Error404.js","components/LoginError.js","components/LoadingScreen.js","components/TransactionsByDate.js","components/Login.js","components/permissions.js","components/HeaderFooter.js","App.js","index.js"],"names":["module","exports","loadStore","userName","_store","localStorage","getItem","JSON","parse","saveStore","setItem","stringify","GlobalTransactions","createContext","transactions","setTransactions","LoggedIn","loggedIn","setLoggedIn","MenuOpener","menuOpened","setMenuToggle","DateRangeFn","dateRange","setDateRange","Balance","total","useContext","reduce","transaction","amount","className","style","total__amount","Watcher","income","expense","forEach","tr","getIncomeExpense","uniqueNumber","date","Date","getFullYear","toTwoDigit","getMonth","getDate","getHours","getMinutes","getSeconds","digit","dateString","_date","format","year","month","day","replace","TransactionsList","editable","filteredTransactions","maxElements","newTransactions","slice","endElement","React","createRef","useEffect","current","scrollIntoView","map","created","title","onClick","currentTransaction","filter","deleteItem","id","ref","Transactions","useReducer","setEditable","length","NewTransaction","useState","setTitle","setAmount","open","isOpen","toggleOpener","addNewItem","type","shouldCloseOnOverlayClick","shouldCloseOnEsc","onRequestClose","ariaHideApp","overlay","backgroundColor","content","position","left","top","transform","background","borderRadius","border","outline","padding","width","maxWidth","boxSizing","onSubmit","event","preventDefault","_amount","parseInt","data","getTime","autoFocus","placeholder","name","value","onChange","e","target","Home","Error404","LoginError","LoadingScreen","MonthlyTransactions","dateRangeValue","useMemo","Provider","DateRange","today","startDate","setStartDate","endDate","setEndDate","maxEnd","start","setHours","end","number","setDate","datePlusDay","max","min","Login","username","setUsername","password","setPassword","valid","setValid","login","setLogin","submitLogin","isValid","checkPermission","submitLogout","to","process","profilePage","Header","opener","menuOpenerValues","Footer","App","loading","setLoading","transactionValues","loginValues","setTimeout","exact","from","path","require","config","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26bd7b4d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"total\":\"Balance_total__2uVBj\",\"total__amount\":\"Balance_total__amount__3G5j7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addNewItem\":\"NewTransaction_addNewItem__OT3ii\"};","export function loadStore(userName) {\r\n  const _store = localStorage.getItem(userName);\r\n  if (!_store) return [];\r\n  return JSON.parse(_store);\r\n}\r\n\r\nexport function saveStore(userName, _store) {\r\n  localStorage.setItem(userName, JSON.stringify(_store));\r\n}\r\n","import { createContext } from \"react\";\r\n\r\nexport const GlobalTransactions = createContext({\r\n  transactions: [],\r\n  setTransactions: () => {},\r\n});\r\n\r\nexport const LoggedIn = createContext({\r\n  loggedIn: false,\r\n  setLoggedIn: () => {},\r\n});\r\n\r\nexport const MenuOpener = createContext({\r\n  menuOpened: false,\r\n  setMenuToggle: () => {},\r\n});\r\n\r\nexport const DateRangeFn = createContext({\r\n  dateRange: \"\",\r\n  setDateRange: () => {},\r\n});\r\n","import style from \"../resources/scss/Balance.module.scss\";\r\nimport { useContext } from \"react\";\r\nimport { GlobalTransactions } from \"./_globalContext\";\r\n\r\nexport default function Balance() {\r\n  const { transactions } = useContext(GlobalTransactions);\r\n  const total = transactions.reduce(\r\n    (total, transaction) => total + transaction.amount,\r\n    0\r\n  );\r\n\r\n  return (\r\n    <section className={style.total}>\r\n      <p className=\"section-title\">Total balance:</p>\r\n      <p className={style.total__amount}>{total}</p>\r\n    </section>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalTransactions } from \"./_globalContext\";\r\nimport \"../resources/scss/Watcher.scss\";\r\n\r\nexport default function Watcher() {\r\n  const { transactions } = useContext(GlobalTransactions);\r\n\r\n  function getIncomeExpense() {\r\n    let income = 0;\r\n    let expense = 0;\r\n    transactions.forEach((tr) => {\r\n      if (tr.amount > 0) {\r\n        income += tr.amount;\r\n      } else {\r\n        expense -= tr.amount;\r\n      }\r\n    });\r\n    return [income, expense];\r\n  }\r\n\r\n  const [income, expense] = getIncomeExpense();\r\n\r\n  return (\r\n    <section className=\"watcher\">\r\n      <div className=\"watcher__container\">\r\n        <div>\r\n          <span>Income</span>\r\n          <span className=\"amount income\">{income}</span>\r\n        </div>\r\n        <div>\r\n          <span>Expense</span>\r\n          <span className=\"amount expense\">{expense}</span>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","export function uniqueNumber() {\r\n  const date = new Date();\r\n  const str = `${date.getFullYear()}${toTwoDigit(\r\n    date.getMonth() + 1\r\n  )}${toTwoDigit(date.getDate())}_${toTwoDigit(date.getHours())}${toTwoDigit(\r\n    date.getMinutes()\r\n  )}${toTwoDigit(date.getSeconds())}`;\r\n  return str;\r\n}\r\nexport function toTwoDigit(digit) {\r\n  if (digit < 10) return `0${digit}`;\r\n  return `${digit}`;\r\n}\r\nexport function dateString(_date, format) {\r\n  const date = new Date(_date);\r\n  const [year, month, day] = [\r\n    toTwoDigit(date.getFullYear()),\r\n    toTwoDigit(date.getMonth() + 1),\r\n    toTwoDigit(date.getDate()),\r\n  ];\r\n  if (format)\r\n    return format\r\n      .replace(/y/i, `${year}`)\r\n      .replace(/m/i, `${month}`)\r\n      .replace(/d/i, `${day}`);\r\n  return `${year}-${month}-${day}`;\r\n}\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { dateString } from \"../Utilities\";\r\nimport { GlobalTransactions } from \"./_globalContext\";\r\nimport \"../resources/scss/TransactionsList.scss\";\r\nimport { BiTrashAlt } from \"react-icons/bi\";\r\n\r\nexport default function TransactionsList({\r\n  editable = false,\r\n  filteredTransactions = null,\r\n  maxElements = null,\r\n}) {\r\n  const { transactions, setTransactions } = useContext(GlobalTransactions);\r\n  let newTransactions = filteredTransactions || transactions;\r\n  newTransactions = maxElements\r\n    ? newTransactions.slice(-maxElements)\r\n    : newTransactions;\r\n  const endElement = React.createRef();\r\n\r\n  useEffect(() => {\r\n    endElement.current.scrollIntoView();\r\n  }, [endElement]);\r\n\r\n  function deleteItem(currentTransaction) {\r\n    const newTransactions = [...transactions].filter(\r\n      (transaction) => transaction !== currentTransaction\r\n    );\r\n    setTransactions([...newTransactions]);\r\n  }\r\n\r\n  return (\r\n    <ul className=\"transactions__list\">\r\n      {newTransactions.map((transaction) => {\r\n        const date = dateString(transaction.created);\r\n        return (\r\n          <li\r\n            key={transaction.id}\r\n            className={transaction.amount < 0 ? \"negative\" : \"positive\"}\r\n          >\r\n            <span className={\"trans_date\"}>{date}</span>\r\n            <span className={\"trans_title\"}>{transaction.title}</span>\r\n            <span className={\"trans_amount\"}>{transaction.amount}</span>\r\n            {editable && (\r\n              <>\r\n                <button\r\n                  className={\"trans_delete\"}\r\n                  onClick={() => deleteItem(transaction)}\r\n                >\r\n                  Delete <BiTrashAlt />\r\n                </button>\r\n              </>\r\n            )}\r\n          </li>\r\n        );\r\n      })}\r\n      <li className=\"dummy\" ref={endElement}></li>\r\n    </ul>\r\n  );\r\n}\r\n","import React, { useReducer, useContext } from \"react\";\r\nimport { BiEdit, BiSave, BiTrash } from \"react-icons/bi\";\r\nimport \"../resources/scss/Transactions.scss\";\r\nimport { GlobalTransactions } from \"./_globalContext\";\r\nimport TransactionsList from \"./TransactionsList\";\r\n\r\nconst MAX_TRANSACTIONS = 8;\r\n\r\nexport default function Transactions() {\r\n  const [editable, setEditable] = useReducer((editable) => !editable);\r\n  const maxElements = MAX_TRANSACTIONS;\r\n\r\n  function clearAll() {\r\n    setTransactions([]);\r\n    setEditable();\r\n  }\r\n  const { transactions, setTransactions } = useContext(GlobalTransactions);\r\n\r\n  return (\r\n    <section className=\"transactions\">\r\n      <div className=\"transactions__header\">\r\n        <p className=\"section-title\">\r\n          Transactions (last {maxElements} elements)\r\n        </p>\r\n        <div className=\"trans_buttons\">\r\n          {transactions.length > 0 &&\r\n            (editable && transactions.length > 0 ? (\r\n              <>\r\n                <button\r\n                  title=\"Clear All\"\r\n                  className=\"trans_save\"\r\n                  onClick={clearAll}\r\n                >\r\n                  Clear All <BiTrash />\r\n                </button>\r\n                <button\r\n                  title=\"Save\"\r\n                  className=\"trans_save\"\r\n                  onClick={setEditable}\r\n                >\r\n                  Save <BiSave />\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <button\r\n                  title=\"Edit\"\r\n                  className=\"trans_edit\"\r\n                  onClick={setEditable}\r\n                >\r\n                  Edit\r\n                  <BiEdit />\r\n                </button>\r\n              </>\r\n            ))}\r\n        </div>\r\n      </div>\r\n      <TransactionsList editable={editable} maxElements={maxElements} />\r\n    </section>\r\n  );\r\n}\r\n","import { useState, useContext, useReducer } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { uniqueNumber } from \"../Utilities\";\r\nimport style from \"../resources/scss/NewTransaction.module.scss\";\r\nimport { GlobalTransactions } from \"./_globalContext\";\r\n\r\nexport default function NewTransaction() {\r\n  let [title, setTitle] = useState(\"\");\r\n  let [amount, setAmount] = useState(\"\");\r\n\r\n  const { transactions, setTransactions } = useContext(GlobalTransactions);\r\n  const [isOpen, toggleOpener] = useReducer((open) => !open, false);\r\n\r\n  function addToTransactions(event) {\r\n    event.preventDefault();\r\n    if (!title || !amount) return;\r\n    const _amount = parseInt(amount, 10);\r\n    const data = {\r\n      id: uniqueNumber(),\r\n      title,\r\n      amount: _amount,\r\n      created: new Date().getTime(),\r\n    };\r\n\r\n    setTitle(\"\");\r\n    setAmount(\"\");\r\n    setTransactions([...transactions, data]);\r\n    toggleOpener();\r\n  }\r\n\r\n  return (\r\n    <section className={style.addNewItem}>\r\n      <button className=\"primary\" type=\"submit\" onClick={toggleOpener}>\r\n        Add new item\r\n      </button>\r\n      <Modal\r\n        isOpen={isOpen}\r\n        shouldCloseOnOverlayClick={true}\r\n        shouldCloseOnEsc={true}\r\n        onRequestClose={toggleOpener}\r\n        className={style.addNewItem}\r\n        ariaHideApp={false}\r\n        style={{\r\n          overlay: {\r\n            backgroundColor: \"rgba(238, 238, 238, 0.7)\",\r\n          },\r\n          content: {\r\n            position: \"absolute\",\r\n            left: \"50%\",\r\n            top: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            background: \"#282828\",\r\n            borderRadius: \"5px\",\r\n            border: \"1px solid #424242\",\r\n            outline: \"none\",\r\n            padding: \"20px\",\r\n            width: \"calc(100% - 30px)\",\r\n            maxWidth: \"400px\",\r\n            boxSizing: \"border-box\",\r\n          },\r\n        }}\r\n      >\r\n        <p className=\"section-title\">Add new item</p>\r\n        <form onSubmit={addToTransactions}>\r\n          <label>\r\n            <span>Title:</span>\r\n            <input\r\n              autoFocus={true}\r\n              placeholder=\"Item name\"\r\n              name=\"title\"\r\n              type=\"text\"\r\n              value={title}\r\n              onChange={(e) => {\r\n                setTitle(e.target.value);\r\n              }}\r\n            />\r\n          </label>\r\n          <label>\r\n            <span>Amount:</span>\r\n            <input\r\n              placeholder=\"Item cost\"\r\n              name=\"amount\"\r\n              type=\"number\"\r\n              value={amount}\r\n              onChange={(e) => {\r\n                setAmount(e.target.value);\r\n              }}\r\n            />\r\n          </label>\r\n          <button className=\"primary\" type=\"submit\">\r\n            Add to list\r\n          </button>\r\n        </form>\r\n      </Modal>\r\n    </section>\r\n  );\r\n}\r\n","import React, { useEffect, useContext } from \"react\";\r\n\r\nimport { loadStore, saveStore } from \"./Store\";\r\nimport Balance from \"./Balance\";\r\nimport Watcher from \"./Watcher\";\r\nimport Transactions from \"./Transactions\";\r\nimport NewTransaction from \"./NewTransaction\";\r\nimport { GlobalTransactions } from \"./_globalContext\";\r\nimport \"../resources/scss/Home.scss\";\r\n\r\nexport default function Home() {\r\n  const userName = loadStore(\"__login\")[0]?.userName;\r\n\r\n  const { transactions } = useContext(GlobalTransactions);\r\n\r\n  useEffect(() => {\r\n    saveStore(userName, transactions);\r\n  }, [transactions, userName]);\r\n\r\n  return (\r\n    <div className=\"expense-tracker\">\r\n      <Balance />\r\n      <Watcher />\r\n      <Transactions />\r\n      <NewTransaction />\r\n    </div>\r\n  );\r\n}\r\n","import \"../resources/scss/Error404.scss\";\r\n\r\nexport default function Error404() {\r\n  return (\r\n    <div className=\"error-404\">\r\n      <div className=\"background\"></div>\r\n      <div className=\"error-text\">\r\n        <h2>Error 404</h2>\r\n        <p>The page does not exist!</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"../resources/scss/LoginError.scss\";\r\n\r\nexport default function LoginError() {\r\n  return (\r\n    <div className=\"loginError\">\r\n      <h2>\r\n        Welcome to\r\n        <br /> Expense Tracker\r\n      </h2>\r\n      <p>\r\n        This app is for those who like to keep track of what they spent their\r\n        money on\r\n      </p>\r\n      <p>Please Login to use</p>\r\n    </div>\r\n  );\r\n}\r\n","import \"../resources/scss/LoadingScreen.scss\";\r\nimport { BiDollarCircle } from \"react-icons/bi\";\r\n\r\nexport default function LoadingScreen() {\r\n  return (\r\n    <div className=\"loadingScreen\">\r\n      <span className=\"icon\">\r\n        <BiDollarCircle />\r\n      </span>\r\n      {/* <h2>Loading</h2> */}\r\n    </div>\r\n  );\r\n}\r\n","import { useContext, useMemo, useState } from \"react\";\r\nimport { dateString } from \"../Utilities\";\r\nimport \"../resources/scss/TransactionsByDate.scss\";\r\nimport { DateRangeFn, GlobalTransactions } from \"./_globalContext\";\r\nimport TransactionsList from \"./TransactionsList\";\r\n\r\nexport default function MonthlyTransactions() {\r\n  const [dateRange, setDateRange] = useState([]);\r\n\r\n  const dateRangeValue = useMemo(\r\n    () => ({ dateRange, setDateRange }),\r\n    [dateRange]\r\n  );\r\n\r\n  return (\r\n    <div className=\"expense-tracker\">\r\n      <DateRangeFn.Provider value={dateRangeValue}>\r\n        <DateRange />\r\n        <section className=\"transactions\">\r\n          <TransactionsList filteredTransactions={dateRange} />\r\n        </section>\r\n      </DateRangeFn.Provider>\r\n    </div>\r\n  );\r\n}\r\nfunction DateRange() {\r\n  const today = new Date();\r\n  const [startDate, setStartDate] = useState(dateString(today));\r\n  const [endDate, setEndDate] = useState(dateString(today));\r\n  const maxEnd = dateString(today);\r\n  const { transactions } = useContext(GlobalTransactions);\r\n\r\n  const { setDateRange } = useContext(DateRangeFn);\r\n\r\n  function datePlusDay(_date, number = 0) {\r\n    const date = new Date(_date);\r\n    date.setDate(date.getDate() + number);\r\n    return date.getTime();\r\n  }\r\n\r\n  function selectDateRange(event) {\r\n    event.preventDefault();\r\n    const start = new Date(startDate).setHours(0, 0, 0, 0);\r\n    const end = new Date(datePlusDay(endDate, 1)).setHours(0, 0, 0, 0);\r\n\r\n    const newTransactions = transactions.filter((tr) => {\r\n      return start <= tr.created && tr.created <= end;\r\n    });\r\n    setDateRange(newTransactions);\r\n  }\r\n\r\n  return (\r\n    <section className=\"dateRange\">\r\n      <p>Select Date Range</p>\r\n      <form onSubmit={selectDateRange}>\r\n        <label>\r\n          <span>Star Date:</span>\r\n          <input\r\n            type=\"date\"\r\n            value={startDate}\r\n            onChange={(e) => setStartDate(e.target.value)}\r\n            max={endDate}\r\n          />\r\n        </label>\r\n        <label>\r\n          <span>End Date:</span>\r\n          <input\r\n            type=\"date\"\r\n            value={endDate}\r\n            onChange={(e) => setEndDate(e.target.value)}\r\n            min={startDate}\r\n            max={maxEnd}\r\n          />\r\n        </label>\r\n        <button className=\"primary\" type=\"submit\">\r\n          Select Date\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n","import { useState, useContext } from \"react\";\r\nimport { loadStore, saveStore } from \"./Store\";\r\nimport { checkPermission } from \"./permissions\";\r\nimport \"../resources/scss/Login.scss\";\r\nimport { LoggedIn } from \"./_globalContext\";\r\nimport { BiLogOut, BiMoney, BiTimeFive } from \"react-icons/bi\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MenuOpener } from \"./_globalContext\";\r\n\r\nexport default function Login() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [valid, setValid] = useState(true);\r\n\r\n  const { login, setLogin } = useContext(LoggedIn);\r\n  const { setMenuToggle } = useContext(MenuOpener);\r\n\r\n  function submitLogin(event) {\r\n    event.preventDefault();\r\n    const isValid = checkPermission({ username, password });\r\n    if (isValid) {\r\n      setValid(true);\r\n      setLogin(false);\r\n      saveStore(\"__login\", [{ userName: username }]);\r\n    } else {\r\n      setValid(false);\r\n    }\r\n  }\r\n\r\n  const submitLogout = () => {\r\n    saveStore(\"__login\", []);\r\n    setLogin(true);\r\n  };\r\n  function loginPage() {\r\n    return (\r\n      <div className=\"loginInner loginBox\">\r\n        <h2>Login</h2>\r\n        <span className=\"error\">{!valid && \"Username/password invalid\"}</span>\r\n        <form onSubmit={submitLogin}>\r\n          <label>\r\n            <span>User name:</span>\r\n            <input\r\n              name=\"username\"\r\n              type=\"text\"\r\n              value={username}\r\n              onChange={(e) => {\r\n                setUsername(e.target.value);\r\n                setValid(true);\r\n              }}\r\n              autoFocus={true}\r\n            />\r\n          </label>\r\n          <label>\r\n            <span>Password:</span>\r\n            <input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => {\r\n                setPassword(e.target.value);\r\n                setValid(true);\r\n              }}\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className=\"primary\">\r\n            Login\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function profilePage() {\r\n    const userName = loadStore(\"__login\")[0]?.userName;\r\n\r\n    return (\r\n      <div className=\"loginInner\">\r\n        <h2>Profile</h2>\r\n        <p>User: {userName}</p>\r\n        <div className=\"buttons\">\r\n          <Link to=\"/\" onClick={setMenuToggle}>\r\n            <button type=\"button\" className=\"neutral\">\r\n              <span className=\"button-icon\">\r\n                <BiMoney />\r\n              </span>\r\n              Latest Transactions\r\n            </button>\r\n          </Link>\r\n          <Link to=\"/monthly-transactions\" onClick={setMenuToggle}>\r\n            <button type=\"button\" className=\"neutral\">\r\n              <span className=\"button-icon\">\r\n                <BiTimeFive />\r\n              </span>\r\n              Transactions by Date\r\n            </button>\r\n          </Link>\r\n          <button type=\"button\" onClick={submitLogout} className=\"neutral\">\r\n            <span className=\"button-icon\">\r\n              <BiLogOut style={{ transform: \"rotate(180deg)\" }} />\r\n            </span>\r\n            Logout\r\n          </button>\r\n        </div>\r\n        <span className=\"version\">\r\n          version: {process.env.REACT_APP_VERSION}\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n  return !login ? profilePage() : loginPage();\r\n}\r\n","export function checkPermission({ username, password }) {\r\n  return username;\r\n}\r\n","import React, { useEffect, useReducer, useContext, useMemo } from \"react\";\r\nimport { BiUser as ProfileIcon } from \"react-icons/bi\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../resources/scss/HeaderFooter.scss\";\r\nimport Login from \"./Login\";\r\nimport { LoggedIn } from \"./_globalContext\";\r\nimport { MenuOpener } from \"./_globalContext\";\r\n\r\nexport function Header() {\r\n  const { login } = useContext(LoggedIn);\r\n\r\n  const [menuOpened, setMenuToggle] = useReducer((opener) => !opener, true);\r\n  const menuOpenerValues = useMemo(\r\n    () => ({ menuOpened, setMenuToggle }),\r\n    [menuOpened]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setMenuToggle();\r\n  }, [login]);\r\n\r\n  return (\r\n    <header>\r\n      <h1 className=\"title\">\r\n        <Link to=\"/\">Expense Tracker</Link>\r\n      </h1>\r\n      <div className=\"login-container\">\r\n        {login && <button className=\"register-button neutral\">Register</button>}\r\n        <button className=\"login-button primary\" onClick={setMenuToggle}>\r\n          <span className=\"button-icon\">\r\n            <ProfileIcon />\r\n          </span>\r\n          {login ? \"Login\" : \"Profile\"}\r\n        </button>\r\n        <MenuOpener.Provider value={menuOpenerValues}>\r\n          {menuOpened && <Login />}\r\n        </MenuOpener.Provider>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\nexport function Footer() {\r\n  return <footer></footer>;\r\n}\r\n","import { useState, useMemo, useEffect } from \"react\";\r\nimport \"./resources/scss/App.scss\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Home from \"./components/Home\";\r\nimport Error404 from \"./components/Error404\";\r\nimport LoginError from \"./components/LoginError\";\r\nimport LoadingScreen from \"./components/LoadingScreen\";\r\nimport TransactionsByDate from \"./components/TransactionsByDate\";\r\nimport { Header, Footer } from \"./components/HeaderFooter\";\r\nimport { loadStore } from \"./components/Store\";\r\nimport { GlobalTransactions, LoggedIn } from \"./components/_globalContext\";\r\n\r\nfunction App() {\r\n  const userName = loadStore(\"__login\")[0]?.userName;\r\n  const [login, setLogin] = useState(!userName);\r\n  const [loading, setLoading] = useState(true);\r\n  const [transactions, setTransactions] = useState(loadStore(userName));\r\n\r\n  const transactionValues = useMemo(\r\n    () => ({ transactions, setTransactions }),\r\n    [transactions]\r\n  );\r\n\r\n  const loginValues = useMemo(() => ({ login, setLogin }), [login]);\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 1000);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Background\"></div>\r\n      <div className=\"App\">\r\n        {loading && <LoadingScreen />}\r\n        <LoggedIn.Provider value={loginValues}>\r\n          <Header />\r\n          <main>\r\n            <Switch>\r\n              {login && <LoginError />}\r\n              <Redirect exact from=\"/\" to=\"/home\" />\r\n              <GlobalTransactions.Provider value={transactionValues}>\r\n                <Route path=\"/home\">{login ? <LoginError /> : <Home />}</Route>\r\n                <Route path=\"/monthly-transactions\">\r\n                  <TransactionsByDate />\r\n                </Route>\r\n              </GlobalTransactions.Provider>\r\n              <Route path=\"*\">\r\n                <Error404 />\r\n              </Route>\r\n            </Switch>\r\n          </main>\r\n          <Footer />\r\n        </LoggedIn.Provider>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nrequire(\"dotenv\").config();\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}