{"version":3,"sources":["resources/scss/Balance.module.scss","components/Balance.js","components/Watcher.js","Utilities.js","actions/index.js","components/TransactionsList.js","components/Transactions.js","components/NewTransaction.js","components/Home.js","components/Error404.js","components/LoginError.js","components/TransactionsByDate.js","components/MenuItem.js","components/Menu.js","components/LoginContainer.js","components/HeaderFooter.js","components/Login.js","components/permissions.js","App.js","components/LoadingScreen.js","reducers/reducer-transactions.js","reducers/reducer-loggedin.js","reducers/reducer-user.js","store/index.js","index.js"],"names":["module","exports","connect","state","transactions","total","reduce","transaction","amount","className","style","total__amount","income","expense","forEach","tr","getIncomeExpense","uniqueNumber","date","Date","getFullYear","toTwoDigit","getMonth","getDate","getHours","getMinutes","getSeconds","digit","dateString","_date","format","year","month","day","replace","NEW_TRANSACTION","SET_TRANSACTIONS","DELETE_TRANSACTION","DELETE_TRANSACTIONS","SET_LOGGED_IN","setLoggedIn","login","type","payload","USER_NAME","dispatch","deleteTransaction","editable","filteredTransactions","maxElements","newTransactions","slice","endElement","React","createRef","useEffect","current","scrollIntoView","map","created","title","onClick","id","ref","maxTransactions","deleteAll","useReducer","setEditable","length","onCreatePressed","onLoadPage","useState","setTitle","setAmount","open","isOpen","toggleOpener","shouldCloseOnOverlayClick","shouldCloseOnEsc","onRequestClose","ariaHideApp","overlay","backgroundColor","content","position","left","top","transform","background","borderRadius","border","outline","padding","width","maxWidth","boxSizing","onSubmit","event","preventDefault","_amount","parseInt","data","getTime","autoFocus","placeholder","name","value","onChange","e","target","Home","Error404","LoginError","DateRange","parentCallback","today","startDate","setStartDate","endDate","setEndDate","maxEnd","start","setHours","end","number","setDate","datePlusDay","filter","max","min","setFilteredTransactions","MenuItem","linkTo","action","text","icon","buttonCls","disabled","to","loggedIn","setLogin","toggle","history","useHistory","setMenuToggle","push","process","closeTimeoutMS","Header","Footer","user","setUserName","username","setUsername","password","setPassword","valid","setValid","isValid","checkPermission","exact","from","path","LoadingScreen","concat","RootReducer","combineReducers","persistConfig","key","storage","stateReconciler","autoMergeLevel2","persistedReducer","persistReducer","configureStore","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","require","config","store","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.3247961d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"total\":\"Balance_total__2uVBj\",\"total__amount\":\"Balance_total__amount__3G5j7\"};","import style from \"../resources/scss/Balance.module.scss\";\r\n\r\n// REDUX\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Balance({ transactions }) {\r\n  const total = transactions.reduce(\r\n    (total, transaction) => total + transaction.amount,\r\n    0\r\n  );\r\n\r\n  return (\r\n    <section className={style.total}>\r\n      <p className=\"section-title\">Total balance:</p>\r\n      <p className={style.total__amount}>{total}</p>\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    transactions: state.transactions,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Balance);\r\n","import React from \"react\";\r\nimport \"../resources/scss/Watcher.scss\";\r\n\r\n// REDUX\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Watcher({ transactions }) {\r\n  function getIncomeExpense() {\r\n    let income = 0;\r\n    let expense = 0;\r\n    transactions.forEach((tr) => {\r\n      if (tr.amount > 0) {\r\n        income += tr.amount;\r\n      } else {\r\n        expense -= tr.amount;\r\n      }\r\n    });\r\n    return [income, expense];\r\n  }\r\n\r\n  const [income, expense] = getIncomeExpense();\r\n\r\n  return (\r\n    <section className=\"watcher\">\r\n      <div className=\"watcher__container\">\r\n        <div>\r\n          <span>Income</span>\r\n          <span className=\"amount income\">{income}</span>\r\n        </div>\r\n        <div>\r\n          <span>Expense</span>\r\n          <span className=\"amount expense\">{expense}</span>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    transactions: state.transactions,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Watcher);\r\n","export function uniqueNumber() {\r\n  const date = new Date();\r\n  const str = `${date.getFullYear()}${toTwoDigit(\r\n    date.getMonth() + 1\r\n  )}${toTwoDigit(date.getDate())}_${toTwoDigit(date.getHours())}${toTwoDigit(\r\n    date.getMinutes()\r\n  )}${toTwoDigit(date.getSeconds())}`;\r\n  return str;\r\n}\r\nexport function toTwoDigit(digit) {\r\n  if (digit < 10) return `0${digit}`;\r\n  return `${digit}`;\r\n}\r\nexport function dateString(_date, format) {\r\n  const date = new Date(_date);\r\n  const [year, month, day] = [\r\n    toTwoDigit(date.getFullYear()),\r\n    toTwoDigit(date.getMonth() + 1),\r\n    toTwoDigit(date.getDate()),\r\n  ];\r\n  if (format)\r\n    return format\r\n      .replace(/y/i, `${year}`)\r\n      .replace(/m/i, `${month}`)\r\n      .replace(/d/i, `${day}`);\r\n  return `${year}-${month}-${day}`;\r\n}\r\n","//TRANSACTIONS\r\nexport const NEW_TRANSACTION = \"NEW_TRANSACTION\";\r\nexport const GET_TRANSACTIONS = \"GET_TRANSACTIONS\";\r\nexport const SET_TRANSACTIONS = \"SET_TRANSACTIONS\";\r\nexport const DELETE_TRANSACTION = \"DELETE_TRANSACTION\";\r\nexport const DELETE_TRANSACTIONS = \"DELETE_TRANSACTIONS\";\r\n\r\nexport const newTransaction = (transaction) => ({\r\n  type: NEW_TRANSACTION,\r\n  payload: transaction,\r\n});\r\n\r\nexport const getTransactions = (transactions) => ({\r\n  type: GET_TRANSACTIONS,\r\n  payload: transactions,\r\n});\r\n\r\nexport const setTransactions = (transaction) => ({\r\n  type: SET_TRANSACTIONS,\r\n  payload: transaction,\r\n});\r\n\r\nexport const deleteTransaction = (transaction) => ({\r\n  type: DELETE_TRANSACTION,\r\n  payload: transaction,\r\n});\r\n\r\nexport const deleteTransactions = (transactions) => ({\r\n  type: DELETE_TRANSACTIONS,\r\n  payload: transactions,\r\n});\r\n\r\n//LOGIN\r\nexport const SET_LOGGED_IN = \"SET_LOGGED_IN\";\r\n\r\nexport const setLoggedIn = (login) => ({\r\n  type: SET_LOGGED_IN,\r\n  payload: login,\r\n});\r\n\r\n//USER NAME\r\nexport const USER_NAME = \"USER_NAME\";\r\n\r\nexport const setUserName = (user) => ({\r\n  type: USER_NAME,\r\n  payload: user,\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport { dateString } from \"../Utilities\";\r\nimport \"../resources/scss/TransactionsList.scss\";\r\nimport { BiTrashAlt } from \"react-icons/bi\";\r\n\r\n// REDUX\r\nimport { connect } from \"react-redux\";\r\nimport { deleteTransaction } from \"../actions\";\r\n\r\nfunction TransactionsList({\r\n  editable = false,\r\n  filteredTransactions = null,\r\n  maxElements = null,\r\n  transactions,\r\n  deleteTransaction,\r\n}) {\r\n  let newTransactions = filteredTransactions || transactions;\r\n\r\n  newTransactions = maxElements\r\n    ? newTransactions.slice(-maxElements)\r\n    : newTransactions;\r\n  const endElement = React.createRef();\r\n\r\n  useEffect(() => {\r\n    endElement.current.scrollIntoView();\r\n  }, [endElement]);\r\n\r\n  function deleteItem(currentTransaction) {\r\n    deleteTransaction(currentTransaction);\r\n  }\r\n\r\n  return (\r\n    <ul className=\"transactions__list\">\r\n      {newTransactions.map((transaction) => {\r\n        const date = dateString(transaction.created);\r\n        return (\r\n          <li\r\n            key={transaction.id}\r\n            className={transaction.amount < 0 ? \"negative\" : \"positive\"}\r\n          >\r\n            <span className={\"trans_date\"}>{date}</span>\r\n            <span className={\"trans_title\"}>{transaction.title}</span>\r\n            <span className={\"trans_amount\"}>{transaction.amount}</span>\r\n            {editable && (\r\n              <>\r\n                <button\r\n                  className={\"trans_delete\"}\r\n                  onClick={() => deleteItem(transaction)}\r\n                >\r\n                  Delete\r\n                  <BiTrashAlt />\r\n                </button>\r\n              </>\r\n            )}\r\n          </li>\r\n        );\r\n      })}\r\n      <li className=\"dummy\" ref={endElement}></li>\r\n    </ul>\r\n  );\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    transactions: state.transactions,\r\n  };\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteTransaction: (tr) => dispatch(deleteTransaction(tr)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionsList);\r\n","import React, { useReducer } from \"react\";\r\nimport { BiEdit, BiSave, BiTrash } from \"react-icons/bi\";\r\nimport \"../resources/scss/Transactions.scss\";\r\nimport TransactionsList from \"./TransactionsList\";\r\n// REDUX\r\nimport { connect } from \"react-redux\";\r\nimport { deleteTransactions } from \"../actions\";\r\n\r\nfunction Transactions({ transactions, deleteAll }) {\r\n  const [editable, setEditable] = useReducer((editable) => !editable);\r\n  const maxTransactions = 8;\r\n  function clearAll() {\r\n    deleteAll();\r\n    setEditable();\r\n  }\r\n\r\n  return (\r\n    <section className=\"transactions\">\r\n      <div className=\"transactions__header\">\r\n        <p className=\"section-title\">\r\n          Transactions (last {maxTransactions} elements)\r\n        </p>\r\n        <div className=\"trans_buttons\">\r\n          {transactions.length > 0 &&\r\n            (editable && transactions.length > 0 ? (\r\n              <>\r\n                <button\r\n                  title=\"Clear All\"\r\n                  className=\"trans_save\"\r\n                  onClick={clearAll}\r\n                >\r\n                  Clear All\r\n                  <BiTrash />\r\n                </button>\r\n                <button\r\n                  title=\"Save\"\r\n                  className=\"trans_save\"\r\n                  onClick={setEditable}\r\n                >\r\n                  Save\r\n                  <BiSave />\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <button\r\n                  title=\"Edit\"\r\n                  className=\"trans_edit\"\r\n                  onClick={setEditable}\r\n                >\r\n                  Edit\r\n                  <BiEdit />\r\n                </button>\r\n              </>\r\n            ))}\r\n        </div>\r\n      </div>\r\n      <TransactionsList editable={editable} maxElements={maxTransactions} />\r\n    </section>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    transactions: state.transactions,\r\n    maxTransactions: state.maxTransactions,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteAll: (tr) => dispatch(deleteTransactions(tr)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Transactions);\r\n","import { useState, useReducer } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { uniqueNumber } from \"../Utilities\";\r\nimport \"../resources/scss/NewTransaction.scss\";\r\nimport { newTransaction, getTransactions } from \"../actions\";\r\n// REDUX\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction NewTransaction({ onCreatePressed }) {\r\n  let [title, setTitle] = useState(\"\");\r\n  let [amount, setAmount] = useState(\"\");\r\n\r\n  const [isOpen, toggleOpener] = useReducer((open) => !open, false);\r\n\r\n  function addToTransactions(event) {\r\n    event.preventDefault();\r\n    if (!title || !amount) return;\r\n    const _amount = parseInt(amount, 10);\r\n    const data = {\r\n      id: uniqueNumber(),\r\n      title,\r\n      amount: _amount,\r\n      created: new Date().getTime(),\r\n    };\r\n\r\n    setTitle(\"\");\r\n    setAmount(\"\");\r\n    onCreatePressed(data);\r\n    toggleOpener();\r\n  }\r\n\r\n  return (\r\n    <section className=\"addNewItem\">\r\n      <button className=\"primary\" type=\"submit\" onClick={toggleOpener}>\r\n        Add new item\r\n      </button>\r\n      <Modal\r\n        // closeTimeoutMS={500}\r\n        isOpen={isOpen}\r\n        shouldCloseOnOverlayClick={true}\r\n        shouldCloseOnEsc={true}\r\n        onRequestClose={toggleOpener}\r\n        className=\"addNewItem\"\r\n        ariaHideApp={false}\r\n        style={{\r\n          overlay: {\r\n            backgroundColor: \"rgba(238, 238, 238, 0.7)\",\r\n          },\r\n          content: {\r\n            position: \"absolute\",\r\n            left: \"50%\",\r\n            top: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            background: \"#282828\",\r\n            borderRadius: \"5px\",\r\n            border: \"1px solid #424242\",\r\n            outline: \"none\",\r\n            padding: \"20px\",\r\n            width: \"calc(100% - 30px)\",\r\n            maxWidth: \"400px\",\r\n            boxSizing: \"border-box\",\r\n          },\r\n        }}\r\n      >\r\n        <p className=\"section-title\">Add new item</p>\r\n        <form onSubmit={addToTransactions}>\r\n          <label>\r\n            <span>Title:</span>\r\n            <input\r\n              autoFocus={true}\r\n              placeholder=\"Item name\"\r\n              name=\"title\"\r\n              type=\"text\"\r\n              value={title}\r\n              onChange={(e) => {\r\n                setTitle(e.target.value);\r\n              }}\r\n            />\r\n          </label>\r\n          <label>\r\n            <span>Amount:</span>\r\n            <input\r\n              placeholder=\"Item cost\"\r\n              name=\"amount\"\r\n              type=\"number\"\r\n              value={amount}\r\n              onChange={(e) => {\r\n                setAmount(e.target.value);\r\n              }}\r\n            />\r\n          </label>\r\n          <button className=\"primary\" type=\"submit\">\r\n            Add to list\r\n          </button>\r\n        </form>\r\n      </Modal>\r\n    </section>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    maxTransactions: state.maxTransactions,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onCreatePressed: (tr) => dispatch(newTransaction(tr)),\r\n    onLoadPage: (tr) => dispatch(getTransactions(tr)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewTransaction);\r\n","import React from \"react\";\r\nimport Balance from \"./Balance\";\r\nimport Watcher from \"./Watcher\";\r\nimport Transactions from \"./Transactions\";\r\nimport NewTransaction from \"./NewTransaction\";\r\nimport \"../resources/scss/Home.scss\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div className=\"expense-tracker\">\r\n      <Balance />\r\n      <Watcher />\r\n      <Transactions />\r\n      <NewTransaction />\r\n    </div>\r\n  );\r\n}\r\n","import \"../resources/scss/Error404.scss\";\r\n\r\nexport default function Error404() {\r\n  return (\r\n    <div className=\"error-404\">\r\n      <div className=\"background\"></div>\r\n      <div className=\"error-text\">\r\n        <h2>Error 404</h2>\r\n        <p>The page does not exist!</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"../resources/scss/LoginError.scss\";\r\n\r\nexport default function LoginError() {\r\n  return (\r\n    <div className=\"loginError\">\r\n      <h2>\r\n        Welcome to\r\n        <br /> Expense Tracker\r\n      </h2>\r\n      <p>\r\n        This app is for those who like to keep track of what they spent their\r\n        money on\r\n      </p>\r\n      <p>Please Login to use</p>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { dateString } from \"../Utilities\";\r\nimport \"../resources/scss/TransactionsByDate.scss\";\r\nimport TransactionsList from \"./TransactionsList\";\r\n\r\n// REDUX\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction TransactionsByDate({ transactions }) {\r\n  const [filteredTransactions, setFilteredTransactions] = useState([]);\r\n\r\n  function handleCallback(tr) {\r\n    setFilteredTransactions([...tr]);\r\n  }\r\n  return (\r\n    <div className=\"expense-tracker\">\r\n      <DateRange transactions={transactions} parentCallback={handleCallback} />\r\n      <section className=\"transactions\">\r\n        <TransactionsList filteredTransactions={filteredTransactions} />\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\nfunction DateRange({ transactions, parentCallback }) {\r\n  const today = new Date();\r\n  const [startDate, setStartDate] = useState(dateString(today));\r\n  const [endDate, setEndDate] = useState(dateString(today));\r\n  const maxEnd = dateString(today);\r\n\r\n  function datePlusDay(_date, number = 0) {\r\n    const date = new Date(_date);\r\n    date.setDate(date.getDate() + number);\r\n    return date.getTime();\r\n  }\r\n\r\n  function selectDateRange(event) {\r\n    event.preventDefault();\r\n    const start = new Date(startDate).setHours(0, 0, 0, 0);\r\n    const end = new Date(datePlusDay(endDate, 1)).setHours(0, 0, 0, 0);\r\n\r\n    const newTransactions = transactions.filter((tr) => {\r\n      return start <= tr.created && tr.created <= end;\r\n    });\r\n    parentCallback(newTransactions);\r\n  }\r\n\r\n  return (\r\n    <section className=\"dateRange\">\r\n      <p>Select Date Range</p>\r\n      <form onSubmit={selectDateRange}>\r\n        <label>\r\n          <span>Start Date:</span>\r\n          <input\r\n            type=\"date\"\r\n            value={startDate}\r\n            onChange={(e) => setStartDate(e.target.value)}\r\n            max={endDate}\r\n          />\r\n        </label>\r\n        <label>\r\n          <span>End Date:</span>\r\n          <input\r\n            type=\"date\"\r\n            value={endDate}\r\n            onChange={(e) => setEndDate(e.target.value)}\r\n            min={startDate}\r\n            max={maxEnd}\r\n          />\r\n        </label>\r\n        <button className=\"primary\" type=\"submit\">\r\n          Select Date\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    transactions: state.transactions,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(TransactionsByDate);\r\n","import { Link } from \"react-router-dom\";\r\nimport \"../resources/scss/MenuItem.scss\";\r\n\r\nexport function MenuItem({\r\n  linkTo,\r\n  action,\r\n  text,\r\n  icon,\r\n  buttonCls,\r\n  disabled = false,\r\n}) {\r\n  function setAction() {\r\n    action();\r\n  }\r\n  return (\r\n    <button type=\"button\" className={buttonCls} onClick={setAction}>\r\n      {linkTo ? (\r\n        <Link to={linkTo} disabled={disabled} className=\"button\">\r\n          {icon && <span className=\"button-icon\">{icon}</span>}\r\n          {text}\r\n        </Link>\r\n      ) : (\r\n        <>\r\n          {icon && <span className=\"button-icon\">{icon}</span>}\r\n          {text}\r\n        </>\r\n      )}\r\n    </button>\r\n  );\r\n}\r\n","import { MenuItem } from \"./MenuItem\";\r\nimport { BiLogOut, BiMoney, BiTimeFive, BiX } from \"react-icons/bi\";\r\nimport \"../resources/scss/Menu.scss\";\r\nimport { setLoggedIn } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Menu({ toggle, setLogin }) {\r\n  const history = useHistory();\r\n\r\n  function setMenuToggle() {\r\n    toggle();\r\n  }\r\n  function submitLogout() {\r\n    setLogin(false);\r\n    toggle();\r\n    history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"menuInner\">\r\n      <div className=\"close\">\r\n        <span onClick={setMenuToggle}>\r\n          <BiX />\r\n        </span>\r\n      </div>\r\n      <div className=\"buttons\">\r\n        <MenuItem\r\n          linkTo=\"/\"\r\n          action={setMenuToggle}\r\n          text=\"Latest Transactions\"\r\n          icon={<BiMoney />}\r\n          buttonCls=\"neutral\"\r\n        />\r\n        <MenuItem\r\n          linkTo=\"/monthly-transactions\"\r\n          action={setMenuToggle}\r\n          text=\"Transactions by Date\"\r\n          icon={<BiTimeFive />}\r\n          buttonCls=\"neutral\"\r\n        />\r\n        <MenuItem\r\n          linkTo=\"/\"\r\n          action={submitLogout}\r\n          text=\"Logout\"\r\n          icon={<BiLogOut style={{ transform: \"rotate(180deg)\" }} />}\r\n          buttonCls=\"neutral\"\r\n        />\r\n      </div>\r\n      <span className=\"version\">\r\n        version: [{process.env.REACT_APP_VERSION}]\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loggedIn: state.loggedIn,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setLogin: (login) => dispatch(setLoggedIn(login)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);\r\n","import { useReducer } from \"react\";\r\nimport { BiUser as ProfileIcon } from \"react-icons/bi\";\r\nimport { connect } from \"react-redux\";\r\nimport Menu from \"./Menu\";\r\nimport { MenuItem } from \"./MenuItem\";\r\nimport \"../resources/scss/LoginContainer.scss\";\r\nimport Modal from \"react-modal\";\r\n\r\nfunction LoginContainer({ loggedIn }) {\r\n  const [isOpen, toggleOpener] = useReducer((open) => !open, false);\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      {loggedIn ? (\r\n        <MenuItem\r\n          action={toggleOpener}\r\n          text=\"Profile\"\r\n          buttonCls=\"profile-button primary\"\r\n          icon={<ProfileIcon />}\r\n        />\r\n      ) : (\r\n        <>\r\n          <MenuItem\r\n            action={() => {}}\r\n            text=\"Register\"\r\n            buttonCls=\"register-button neutral\"\r\n          />\r\n          <MenuItem\r\n            action={() => {}}\r\n            linkTo=\"/login\"\r\n            text=\"Login\"\r\n            buttonCls=\"login-button primary\"\r\n            icon={<ProfileIcon />}\r\n          />\r\n        </>\r\n      )}\r\n      <Modal\r\n        closeTimeoutMS={500}\r\n        isOpen={isOpen}\r\n        shouldCloseOnOverlayClick={true}\r\n        shouldCloseOnEsc={true}\r\n        onRequestClose={toggleOpener}\r\n        className=\"Menu-Modal\"\r\n        ariaHideApp={false}\r\n        style={{\r\n          overlay: {\r\n            backgroundColor: \"rgba(238, 238, 238, 0)\",\r\n          },\r\n        }}\r\n      >\r\n        <Menu toggle={toggleOpener} />\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    loggedIn: state.loggedIn,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(LoginContainer);\r\n","import { Link } from \"react-router-dom\";\r\nimport \"../resources/scss/HeaderFooter.scss\";\r\nimport LoginContainer from \"./LoginContainer\";\r\n\r\nexport function Header() {\r\n  return (\r\n    <header>\r\n      <h1 className=\"title\">\r\n        <Link to=\"/\">Expense Tracker</Link>\r\n      </h1>\r\n      <LoginContainer />\r\n    </header>\r\n  );\r\n}\r\nexport function Footer() {\r\n  return <footer></footer>;\r\n}\r\n","import { useState } from \"react\";\r\nimport { checkPermission } from \"./permissions\";\r\nimport \"../resources/scss/Login.scss\";\r\nimport { setLoggedIn, setUserName } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Login({ setLogin, setUserName }) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [valid, setValid] = useState(true);\r\n  const history = useHistory();\r\n\r\n  function submitLogin(event) {\r\n    event.preventDefault();\r\n    const isValid = checkPermission({ username, password });\r\n\r\n    if (isValid) {\r\n      setValid(true);\r\n      setLogin(true);\r\n      history.push(\"/\");\r\n      setUserName(username);\r\n    } else {\r\n      setValid(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"loginInner loginBox\">\r\n      <h2>Login</h2>\r\n      <span className=\"error\">{!valid && \"Username/password invalid\"}</span>\r\n      <form onSubmit={submitLogin}>\r\n        <label>\r\n          <span>User name:</span>\r\n          <input\r\n            name=\"username\"\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => {\r\n              setUsername(e.target.value);\r\n              setValid(true);\r\n            }}\r\n            autoFocus={true}\r\n          />\r\n        </label>\r\n        <label>\r\n          <span>Password:</span>\r\n          <input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => {\r\n              setPassword(e.target.value);\r\n              setValid(true);\r\n            }}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className=\"primary\">\r\n          Login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loggedIn: state.loggedIn,\r\n    user: state.user,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setLogin: (login) => dispatch(setLoggedIn(login)),\r\n    setUserName: (user) => dispatch(setUserName(user)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","export function checkPermission({ username, password }) {\r\n  return username;\r\n}\r\n","import \"./resources/scss/App.scss\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Home from \"./components/Home\";\r\nimport Error404 from \"./components/Error404\";\r\nimport LoginError from \"./components/LoginError\";\r\nimport TransactionsByDate from \"./components/TransactionsByDate\";\r\nimport { Header, Footer } from \"./components/HeaderFooter\";\r\n\r\n// REDUX\r\nimport { connect } from \"react-redux\";\r\nimport Login from \"./components/Login\";\r\n\r\nfunction App({ loggedIn }) {\r\n  return (\r\n    <>\r\n      <div className=\"Background\"></div>\r\n      <div className=\"App\">\r\n        <Header />\r\n        <main>\r\n          {!loggedIn && <Redirect to=\"/home\" />}\r\n          <Switch>\r\n            <Redirect exact from=\"/\" to=\"/home\" />\r\n            <Route path=\"/home\">{loggedIn ? <Home /> : <LoginError />}</Route>\r\n            <Route path=\"/monthly-transactions\">\r\n              <TransactionsByDate />\r\n            </Route>\r\n            <Route path=\"/login\">\r\n              <Login />\r\n            </Route>\r\n            <Route path=\"*\">\r\n              <Error404 />\r\n            </Route>\r\n          </Switch>\r\n        </main>\r\n        <Footer />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    loggedIn: state.loggedIn,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import \"../resources/scss/LoadingScreen.scss\";\r\nimport { BiDollarCircle } from \"react-icons/bi\";\r\n\r\nexport default function LoadingScreen() {\r\n  return (\r\n    <div className=\"loadingScreen\">\r\n      <span className=\"icon\">\r\n        <BiDollarCircle />\r\n      </span>\r\n      {/* <h2>Loading</h2> */}\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  NEW_TRANSACTION,\r\n  SET_TRANSACTIONS,\r\n  DELETE_TRANSACTION,\r\n  DELETE_TRANSACTIONS,\r\n} from \"../actions\";\r\n\r\nconst transactions = (state = [], action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case NEW_TRANSACTION: {\r\n      const transaction = payload;\r\n      return state.concat(transaction);\r\n    }\r\n    case SET_TRANSACTIONS: {\r\n      const transaction = payload;\r\n      return transaction;\r\n    }\r\n    case DELETE_TRANSACTION: {\r\n      const transaction = payload;\r\n      return state.filter((tr) => tr.id !== transaction.id);\r\n    }\r\n    case DELETE_TRANSACTIONS: {\r\n      return [];\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default transactions;\r\n","import { SET_LOGGED_IN } from \"../actions\";\r\n\r\nconst loggedIn = (state = false, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_LOGGED_IN: {\r\n      const loggedIn = payload;\r\n      return loggedIn;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default loggedIn;\r\n","import { USER_NAME } from \"../actions\";\r\n\r\nconst user = (state = null, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_NAME: {\r\n      const user = payload;\r\n      return user;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default user;\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\r\n\r\nimport { transactions, loggedIn, user } from \"../reducers\";\r\n\r\nconst RootReducer = combineReducers({\r\n  transactions,\r\n  loggedIn,\r\n  user,\r\n});\r\nconst persistConfig = {\r\n  key: \"expense-tracker\",\r\n  storage,\r\n  stateReconciler: autoMergeLevel2,\r\n};\r\nconst persistedReducer = persistReducer(persistConfig, RootReducer);\r\n\r\nconst configureStore = createStore(\r\n  persistedReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default configureStore;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport LoadingScreen from \"./components/LoadingScreen\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport configureStore from \"./store\";\r\n// REDUX\r\nimport { Provider } from \"react-redux\";\r\nimport { persistStore } from \"redux-persist\";\r\nimport { PersistGate } from \"redux-persist/lib/integration/react\";\r\n\r\nrequire(\"dotenv\").config();\r\n\r\nconst store = configureStore;\r\nconst persistor = persistStore(store);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate persistor={persistor} loading={<LoadingScreen />}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}